name: Build Heroic, upload artifacts

on:
  workflow_call:
    inputs:
      publish-snap:
        required: false
        type: boolean
    secrets:
      workflowToken:
        required: true
      snapcraftIdEdge:
        required: false

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-22.04, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/install-deps
      - name: Build Windows Portable version
        run: pnpm dist:win portable
        if: runner.os == 'Windows'
      - name: Build macOS
        run: pnpm dist:mac --publish=never
        env:
          GITHUB_TOKEN: ${{ secrets.workflowToken }}
          GH_TOKEN: ${{ secrets.workflowToken }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
        if: runner.os == 'macOS'
      - name: Build and publish Snap version
        run: |
          sudo apt-get install --no-install-recommends -y snapcraft
          pnpm dist:linux Snap --publish=always
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.snapcraftIdEdge }}
        if: runner.os == 'Linux' && inputs.publish-snap
      - name: Build AppImage version
        run: pnpm dist:linux AppImage --x64 --arm64 --publish=never
        if: runner.os == 'Linux'
      - name: Upload built version
        uses: actions/upload-artifact@v4
        with:
          name: ${{ (matrix.os == 'windows-2022'  && 'win-portable'      ) ||
                    (matrix.os == 'macos-13'      && 'mac-universal'     ) ||
                    (matrix.os == 'ubuntu-22.04'  && 'linux-AppImage-x64') }}
          path: ${{ (matrix.os == 'windows-2022'  && 'dist/Heroic*.exe'           ) ||
                    (matrix.os == 'macos-13'      && 'dist/Heroic*universal.dmg'  ) ||
                    (matrix.os == 'ubuntu-22.04'  && 'dist/Heroic*x86_64.AppImage') }}
          retention-days: 14
          if-no-files-found: error
          compression-level: 3
      - name: Upload linux ARM version
        uses: actions/upload-artifact@v4
        with:
          name: linux-AppImage-arm64
          path: dist/Heroic*arm64.AppImage
          retention-days: 14
          if-no-files-found: error
          compression-level: 3
        if: runner.os == 'Linux'
